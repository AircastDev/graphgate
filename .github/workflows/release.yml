name: Release

on:
  push:
    branches:
      - release

jobs:
  graphgate-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get version
        run: echo PACKAGE_VERSION=$(sed -nE 's/^\s*version = "(.*?)"/\1/p' Cargo.toml) >> $GITHUB_ENV
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: |
            scott829/graphgate:${{ env.PACKAGE_VERSION }}
            scott829/graphgate:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  examples-docker:
    runs-on: ubuntu-latest
    needs: graphgate-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ matrix.package.name }}
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: Dockerfile-examples
          tags: scott829/graphgate-examples:latest
      - name: Deploy to Kubernetes
        uses: WyriHaximus/github-action-helm3@v2
        with:
          kubeconfig: '${{ secrets.K8S_CONFIG }}'
          exec: |
            helm uninstall -n graphgate graphgate
            helm upgrade --create-namespace -i -n graphgate graphgate examples/helm

  standalone-demo-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ matrix.package.name }}
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: Dockerfile-standalone-demo
          tags: scott829/graphgate-standalone-demo:latest

  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        package:
          - name: graphgate-schema
            registryName: graphgate-schema
            path: crates/graphgate-schema
          - name: graphgate-validation
            registryName: graphgate-validation
            path: crates/graphgate-validation
          - name: graphgate-planner
            registryName: graphgate-planner
            path: crates/graphgate-planner
          - name: graphgate-handler
            registryName: graphgate-handler
            path: crates/graphgate-handler
          - name: graphgate
            registryName: graphgate
            path: .
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: get version
        working-directory: ${{ matrix.package.path }}
        run: echo PACKAGE_VERSION=$(sed -nE 's/^\s*version = "(.*?)"/\1/p' Cargo.toml) >> $GITHUB_ENV
      - name: check published version
        run: echo PUBLISHED_VERSION=$(cargo search ${{ matrix.package.registryName }} --limit 1 | sed -nE 's/^[^"]*"//; s/".*//1p' -) >> $GITHUB_ENV
      - name: cargo login
        if: env.PACKAGE_VERSION != env.PUBLISHED_VERSION
        run: cargo login ${{ secrets.CRATES_TOKEN }}
      - name: cargo package
        if: env.PACKAGE_VERSION != env.PUBLISHED_VERSION
        working-directory: ${{ matrix.package.path }}
        run: |
          cargo package
          echo "We will publish:" $PACKAGE_VERSION
          echo "This is current latest:" $PUBLISHED_VERSION
      - name: Publish ${{ matrix.package.name }}
        if: env.PACKAGE_VERSION != env.PUBLISHED_VERSION
        working-directory: ${{ matrix.package.path }}
        run: |
          echo "# Cargo Publish"
          cargo publish --no-verify
